version: '1'
services:
  nginx-sevice:
    container_name: nginx-service
    build:
      dockerfile: ./nginx/Dockerfile
    ports:
      - '8000:80'
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
  php-service:
    container_name: php-service
    build:
      dockerfile: ./php/Dockerfile
      target: "${BUILD_TARGET:-app}"
    volumes:
      #volumes overwrite what is inside /html
      - ./app:/var/www/html
      - ./php/conf.d/xdebug.ini:/user/local/etc/php/conf.d/xdebug.ini:ro
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      XDEBUG_MODE: "${XDEBUG_MODE:-off}"
    extra_hosts:
      - host.docker.internal:host-gateway
  postgres-service:
    container_name: postgres-service
    build:
      dockerfile: ./postgres/Dockerfile
#    shm_size: 128mb
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '5432:5432'
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  pgadmin-service:
    container_name: pgadmin-service
    image:  dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - ./servers.json:/pgadmin4/servers.json
    ports:
      - 5050:80
  cache-service:
    container_name: cache-service
    image: redis:7.2.4

volumes:
  pgdata:

# docker inspect <container id> | grep "IPAddress"
# docker exec -it <name> sh (name: avetools_symfony-app-1)
# docker compose up --build -d
# docker compose -f docker-compose.dev.yaml up --build -d
# docker compose -f docker-compose.dev.yaml down
# XDEBUG_MODE=debug docker compose -f docker-compose.dev.yaml up -d
# docker compose -f docker-compose.dev.yaml --env-file .env.local up --build -d

# composer install --ignore-platform-reqs (ignora a vers√£o do pc)
# composer dump-autoload